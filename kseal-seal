#!/usr/bin/env node

const { exec } = require('child_process')
const fs = require("fs")

/**
 * Main function.
 */
async function main() {

    const args = process.argv.slice(2)

    if (args.length != 2) {
        console.error(`
            Usage: kseal-seal namespace app < my-decoded-secrets
        `)
        process.exit(1)
    }

    const namespace = args[0]
    const app = args[1]

    const stdin = fs.readFileSync(0)

    secrets = JSON.parse(stdin)
    keys = Object.keys(secrets)

    for (const key of keys) {
        value = secrets[key]

        const tmpFile = `/tmp/kseal-seal-tmp-${key}`
        fs.writeFileSync(tmpFile, value)
        const sealedValue = await execShellCommand(`
            kubeseal --raw --from-file=${tmpFile} --namespace ${namespace} --name ${app}
        `);

        console.log(key + ': ' + sealedValue)
    }

}

/**
 * Executes a shell command and return it as a Promise.
 * @param cmd {string}
 * @return {Promise<string>}
 */
function execShellCommand(cmd) {
 return new Promise((resolve, reject) => {
  exec(cmd, (error, stdout, stderr) => {
   if (error) {
    console.error(error);
    process.exit(1)
   }
   resolve(stdout? stdout : stderr);
  });
 });
}

main()
